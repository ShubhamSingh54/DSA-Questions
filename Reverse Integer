Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
 

Constraints:

-231 <= x <= 231 - 1

solution---->
 key point---> here we use the concept of singed int which is in the range of(-2^31 to2^31-1);
code--->
int reverse(int x) {
         long int r=0;
        while(x)
        {   
            r=r*10+x%10;
            x=x/10;
            
        }
     
        if(r>=INT_MIN&& r<=INT_MAX)
        {
            return r;
        }   
        else
        {
             return 0;
        }
